const express = require("express");
const router = express.Router();

const Config = require("../models/configs");
const cache = require("../middlewares/cache");

router.post("/api/config", async (req, res) => {
  const configModel = await Config.findOne({});

  if (configModel.length < 1) {
    const newConfig = new Config({
      showMessage: req.body.showMessage,
      showAD: req.body.showAD,
      banner: req.body.banner,
      interstitial: req.body.interstitial,
    });

    const config = await newConfig.save();

    return res.status(200).send({ message: "Settings created!" });
  }

  configModel.showMessage = req.body.showMessage;
  configModel.showAD = req.body.showAD;
  configModel.banner = req.body.banner;
  configModel.interstitial = req.body.interstitial;
  configModel.updated = Date.now();

  const save = await configModel.save();

  return res.status(201).send({ message: "Settings saved!" });
});

router.get("/api/config", async (req, res) => {
  cacheExists = (await cache.getAsync("redisconfigs")) || false;
  if (!cacheExists) {
    const notExists = await Config.find({}).lean();

    notExists[0]._id = undefined;
    notExists[0].updated = undefined;
    notExists[0].created = undefined;
    notExists[0].__v = undefined;

    const save = await cache.setex(
      "redisconfigs",
      60,
      JSON.stringify(notExists[0]),
    );

    return res.status(201).send({ data: notExists[0] });
  }

  return res.status(200).send({ data: JSON.parse(cacheExists) });
});

module.exports = router;
